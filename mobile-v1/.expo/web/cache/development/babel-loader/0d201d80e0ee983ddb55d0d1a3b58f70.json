{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\group project 2\\\\projectApp\\\\guardian-mobile\\\\node_modules\\\\expo\\\\build\\\\Expo.fx.expo.js\";\nimport \"./environment/validate.fx\";\nimport \"./environment/logging.fx\";\nimport \"./environment/muteWarnings.fx\";\nimport 'expo-asset';\nimport Constants from 'expo-constants';\nimport * as Font from 'expo-font';\nimport { installWebGeolocationPolyfill } from 'expo-location';\nimport * as React from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DevAppContainer from \"./environment/DevAppContainer\";\n\nif (Constants.manifest && typeof Constants.manifest.env === 'object') {\n  _extends(process.env, Constants.manifest.env);\n}\n\nif (__DEV__) {\n  if (Platform.OS === 'ios') {\n    AppRegistry.setWrapperComponentProvider(function () {\n      return DevAppContainer;\n    });\n    var originalSetWrapperComponentProvider = AppRegistry.setWrapperComponentProvider;\n\n    AppRegistry.setWrapperComponentProvider = function (provider) {\n      function PatchedProviderComponent(props) {\n        var ProviderComponent = provider();\n        return React.createElement(DevAppContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }\n        }, React.createElement(ProviderComponent, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      originalSetWrapperComponentProvider(function () {\n        return PatchedProviderComponent;\n      });\n    };\n  }\n}\n\nif (StyleSheet.setStyleAttributePreprocessor) {\n  StyleSheet.setStyleAttributePreprocessor('fontFamily', Font.processFontFamily);\n}\n\ninstallWebGeolocationPolyfill();\n\nif (module && module.exports) {\n  if (global) {\n    var globals = require(\"./globals\");\n\n    global.__exponent = globals;\n    global.__expo = globals;\n    global.Expo = globals;\n  }\n}","map":{"version":3,"sources":["../src/Expo.fx.expo.tsx"],"names":[],"mappings":";;AAAA;AACA;AACA;AAGA,OAAO,YAAP;AAEA,OAAO,SAAP,MAAsB,gBAAtB;AACA,OAAO,KAAK,IAAZ,MAAsB,WAAtB;AACA,SAAS,6BAAT,QAA8C,eAA9C;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;;;AAGA,OAAO,eAAP;;AAEA,IAAI,SAAS,CAAC,QAAV,IAAsB,OAAO,SAAS,CAAC,QAAV,CAAmB,GAA1B,KAAkC,QAA5D,EAAsE;AACpE,WAAc,OAAO,CAAC,GAAtB,EAA2B,SAAS,CAAC,QAAV,CAAmB,GAA9C;AACD;;AAGD,IAAI,OAAJ,EAAa;AACX,MAAI,QAAQ,CAAC,EAAT,KAAgB,KAApB,EAA2B;AAEzB,IAAA,WAAW,CAAC,2BAAZ,CAAwC;AAAA,aAAM,eAAN;AAAA,KAAxC;AAGA,QAAM,mCAAmC,GAAG,WAAW,CAAC,2BAAxD;;AAGA,IAAA,WAAW,CAAC,2BAAZ,GAA0C,UAAA,QAAQ,EAAG;AACnD,eAAS,wBAAT,CAAkC,KAAlC,EAA4C;AAC1C,YAAM,iBAAiB,GAAG,QAAQ,EAAlC;AAEA,eACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD,eAAuB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF;AAKD;;AAED,MAAA,mCAAmC,CAAC;AAAA,eAAM,wBAAN;AAAA,OAAD,CAAnC;AACD,KAZD;AAaD;AACF;;AAED,IAAI,UAAU,CAAC,6BAAf,EAA8C;AAC5C,EAAA,UAAU,CAAC,6BAAX,CAAyC,YAAzC,EAAuD,IAAI,CAAC,iBAA5D;AACD;;AAGD,6BAA6B;;AAK7B,IAAI,MAAM,IAAI,MAAM,CAAC,OAArB,EAA8B;AAC5B,MAAI,MAAJ,EAAY;AACV,QAAM,OAAO,GAAG,OAAO,aAAvB;;AAGA,IAAA,MAAM,CAAC,UAAP,GAAoB,OAApB;AAEA,IAAA,MAAM,CAAC,MAAP,GAAgB,OAAhB;AAEA,IAAA,MAAM,CAAC,IAAP,GAAc,OAAd;AACD;AACF","sourcesContent":["import './environment/validate.fx';\nimport './environment/logging.fx';\nimport './environment/muteWarnings.fx';\n\n// load expo-asset immediately to set a custom `source` transformer in React Native\nimport 'expo-asset';\n\nimport Constants from 'expo-constants';\nimport * as Font from 'expo-font';\nimport { installWebGeolocationPolyfill } from 'expo-location';\nimport * as React from 'react';\nimport { AppRegistry, Platform, StyleSheet } from 'react-native';\n\nimport DevAppContainer from './environment/DevAppContainer';\n\nif (Constants.manifest && typeof Constants.manifest.env === 'object') {\n  Object.assign(process.env, Constants.manifest.env);\n}\n\n// add the dev app container wrapper component on ios\nif (__DEV__) {\n  if (Platform.OS === 'ios') {\n    // @ts-ignore\n    AppRegistry.setWrapperComponentProvider(() => DevAppContainer);\n\n    // @ts-ignore\n    const originalSetWrapperComponentProvider = AppRegistry.setWrapperComponentProvider;\n\n    // @ts-ignore\n    AppRegistry.setWrapperComponentProvider = provider => {\n      function PatchedProviderComponent(props: any) {\n        const ProviderComponent = provider();\n\n        return (\n          <DevAppContainer>\n            <ProviderComponent {...props} />\n          </DevAppContainer>\n        );\n      }\n\n      originalSetWrapperComponentProvider(() => PatchedProviderComponent);\n    };\n  }\n}\n\nif (StyleSheet.setStyleAttributePreprocessor) {\n  StyleSheet.setStyleAttributePreprocessor('fontFamily', Font.processFontFamily);\n}\n\n// polyfill navigator.geolocation\ninstallWebGeolocationPolyfill();\n\n// install globals\ndeclare var module: any;\n\nif (module && module.exports) {\n  if (global) {\n    const globals = require('./globals');\n\n    // @ts-ignore\n    global.__exponent = globals;\n    // @ts-ignore\n    global.__expo = globals;\n    // @ts-ignore\n    global.Expo = globals;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}