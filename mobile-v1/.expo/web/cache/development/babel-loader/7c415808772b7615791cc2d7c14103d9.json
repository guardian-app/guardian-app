{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\group project 2\\\\projectApp\\\\guardian-mobile\\\\List\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { ListItem, Subheader, Toolbar } from 'react-native-material-ui/src';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nvar propTypes = {\n  navigation: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired\n};\nvar contextTypes = {\n  uiTheme: PropTypes.object.isRequired\n};\n\nvar List = function (_Component) {\n  _inherits(List, _Component);\n\n  var _super = _createSuper(List);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var listItem = this.context.uiTheme.listItem;\n      var flattenPrimaryText = StyleSheet.flatten(listItem.primaryText);\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, React.createElement(Toolbar, {\n        leftElement: \"arrow-back\",\n        onLeftElementPress: function onLeftElementPress() {\n          return _this.props.navigation.goBack();\n        },\n        centerElement: \"List item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }), React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, React.createElement(Subheader, {\n        text: \"One line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        centerElement: \"Center element as a text\",\n        onPress: function onPress() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        centerElement: {\n          primaryText: 'Center element as an object'\n        },\n        onPress: function onPress() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        centerElement: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        dense: true,\n        centerElement: \"Center element as a text (dense)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }), React.createElement(Subheader, {\n        text: \"One line with icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        leftElement: \"person\",\n        centerElement: {\n          primaryText: 'Center element as an object'\n        },\n        onPress: function onPress() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }), React.createElement(Subheader, {\n        text: \"Two lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        dense: true,\n        centerElement: {\n          primaryText: 'Center element as an object (dense)',\n          secondaryText: 'Pellentesque commodo ultrices diam. Praesent in ipsum'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        centerElement: {\n          primaryText: 'Center element as an object',\n          secondaryText: 'Subtext'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }), React.createElement(Subheader, {\n        text: \"Two lines with icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        leftElement: \"person\",\n        centerElement: {\n          primaryText: 'Center element as an object',\n          secondaryText: 'Subtext'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        leftElement: \"person\",\n        centerElement: {\n          primaryText: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\n          secondaryText: 'Pellentesque commodo ultrices diam. Praesent in ipsum'\n        },\n        rightElement: \"info\",\n        onLeftElementPress: function onLeftElementPress() {\n          if (Platform.OS === 'android') {\n            ToastAndroid.show('Left element pressed', ToastAndroid.SHORT);\n          }\n        },\n        onPress: function onPress() {\n          return ToastAndroid.show('List item pressed', ToastAndroid.SHORT);\n        },\n        onRightElementPress: function onRightElementPress() {\n          if (Platform.OS === 'android') {\n            ToastAndroid.show('Right element pressed', ToastAndroid.SHORT);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }), React.createElement(Subheader, {\n        text: \"Three lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        leftElement: \"person\",\n        centerElement: {\n          primaryText: 'Center element as an object',\n          secondaryText: 'Pellentesque commodo ultrices diam. Praesent in ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing.'\n        },\n        numberOfLines: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        leftElement: \"person\",\n        centerElement: {\n          primaryText: 'Center element as an object',\n          secondaryText: 'Pellentesque commodo ultrices diam. Praesent in ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing.',\n          tertiaryText: 'Praesent in ipsum. Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        leftElement: \"person\",\n        centerElement: {\n          primaryText: 'Ali Connors',\n          secondaryText: 'Brunch this weekend?',\n          tertiaryText: 'Pellentesque commodo ultrices diam. Praesent in ipsum.'\n        },\n        style: {\n          secondaryText: {\n            color: flattenPrimaryText.color\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }), React.createElement(Subheader, {\n        text: \"Dynamic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        leftElement: \"person\",\n        numberOfLines: \"dynamic\",\n        centerElement: {\n          primaryText: 'With dynamic second line',\n          secondaryText: 'Lorem ipsum dolor sit amet, consectetur adipiscing. Pellentesque commodo ultrices diam. Praesent in ipsum'\n        },\n        onPress: function onPress() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }), React.createElement(Subheader, {\n        text: \"Custom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }), React.createElement(ListItem, {\n        divider: true,\n        leftElement: \"person\",\n        centerElement: React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 40\n          }\n        }, \"Custom center element\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nList.propTypes = propTypes;\nList.contextTypes = contextTypes;\nexport default List;","map":{"version":3,"sources":["D:/PROJECTS/group project 2/projectApp/guardian-mobile/List/index.js"],"names":["React","Component","PropTypes","ListItem","Subheader","Toolbar","styles","StyleSheet","create","container","flex","propTypes","navigation","shape","goBack","func","isRequired","contextTypes","uiTheme","object","List","listItem","context","flattenPrimaryText","flatten","primaryText","props","secondaryText","Platform","OS","ToastAndroid","show","SHORT","tertiaryText","color"],"mappings":"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","sourcesContent":["import { Text, View, StyleSheet, ScrollView, ToastAndroid, Platform } from 'react-native';\r\nimport React, { Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport { ListItem, Subheader, Toolbar } from 'react-native-material-ui/src';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nconst propTypes = {\r\n    navigation: PropTypes.shape({\r\n        goBack: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n};\r\nconst contextTypes = {\r\n    uiTheme: PropTypes.object.isRequired,\r\n};\r\n\r\nclass List extends Component {\r\n    render() {\r\n        const { listItem } = this.context.uiTheme;\r\n        const flattenPrimaryText = StyleSheet.flatten(listItem.primaryText);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Toolbar\r\n                    leftElement=\"arrow-back\"\r\n                    onLeftElementPress={() => this.props.navigation.goBack()}\r\n                    centerElement=\"List item\"\r\n                />\r\n                <ScrollView style={styles.container}>\r\n                    <Subheader text=\"One line\" />\r\n                    <ListItem\r\n                        divider\r\n                        centerElement=\"Center element as a text\"\r\n                        onPress={() => {}}\r\n                    />\r\n                    <ListItem\r\n                        divider\r\n                        centerElement={{\r\n                            primaryText: 'Center element as an object',\r\n                        }}\r\n                        onPress={() => {}}\r\n                    />\r\n                    <ListItem\r\n                        divider\r\n                        centerElement=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\r\n                    />\r\n                    <ListItem\r\n                        divider\r\n                        dense\r\n                        centerElement=\"Center element as a text (dense)\"\r\n                    />\r\n                    <Subheader text=\"One line with icon\" />\r\n                    <ListItem\r\n                        divider\r\n                        leftElement=\"person\"\r\n                        centerElement={{\r\n                            primaryText: 'Center element as an object',\r\n                        }}\r\n                        onPress={() => {}}\r\n                    />\r\n\r\n\r\n                    <Subheader text=\"Two lines\" />\r\n                    <ListItem\r\n                        divider\r\n                        dense\r\n                        centerElement={{\r\n                            primaryText: 'Center element as an object (dense)',\r\n                            secondaryText: 'Pellentesque commodo ultrices diam. Praesent in ipsum',\r\n                        }}\r\n                    />\r\n                    <ListItem\r\n                        divider\r\n                        centerElement={{\r\n                            primaryText: 'Center element as an object',\r\n                            secondaryText: 'Subtext',\r\n                        }}\r\n                    />\r\n                    <Subheader text=\"Two lines with icon\" />\r\n                    <ListItem\r\n                        divider\r\n                        leftElement=\"person\"\r\n                        centerElement={{\r\n                            primaryText: 'Center element as an object',\r\n                            secondaryText: 'Subtext',\r\n                        }}\r\n                    />\r\n                    <ListItem\r\n                        divider\r\n                        leftElement=\"person\"\r\n                        centerElement={{\r\n                            primaryText: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\r\n                            secondaryText: 'Pellentesque commodo ultrices diam. Praesent in ipsum',\r\n                        }}\r\n                        rightElement=\"info\"\r\n                        onLeftElementPress={() => {\r\n                            if (Platform.OS === 'android') {\r\n                                ToastAndroid.show('Left element pressed', ToastAndroid.SHORT);\r\n                            }\r\n                        }}\r\n                        onPress={() => ToastAndroid.show('List item pressed', ToastAndroid.SHORT)}\r\n                        onRightElementPress={() => {\r\n                            if (Platform.OS === 'android') {\r\n                                ToastAndroid.show('Right element pressed', ToastAndroid.SHORT);\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Subheader text=\"Three lines\" />\r\n                    <ListItem\r\n                        divider\r\n                        leftElement=\"person\"\r\n                        centerElement={{\r\n                            primaryText: 'Center element as an object',\r\n                            secondaryText: 'Pellentesque commodo ultrices diam. Praesent in ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing.',\r\n                        }}\r\n                        numberOfLines={3}\r\n                    />\r\n                    <ListItem\r\n                        divider\r\n                        leftElement=\"person\"\r\n                        centerElement={{\r\n                            primaryText: 'Center element as an object',\r\n                            secondaryText: 'Pellentesque commodo ultrices diam. Praesent in ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing.',\r\n                            tertiaryText: 'Praesent in ipsum. Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet',\r\n                        }}\r\n                    />\r\n                    <ListItem\r\n                        divider\r\n                        leftElement=\"person\"\r\n                        centerElement={{\r\n                            primaryText: 'Ali Connors',\r\n                            secondaryText: 'Brunch this weekend?',\r\n                            tertiaryText: 'Pellentesque commodo ultrices diam. Praesent in ipsum.',\r\n                        }}\r\n                        style={{\r\n                            secondaryText: { color: flattenPrimaryText.color },\r\n                        }}\r\n                    />\r\n                    <Subheader text=\"Dynamic\" />\r\n                    <ListItem\r\n                        divider\r\n                        leftElement=\"person\"\r\n                        numberOfLines=\"dynamic\"\r\n                        centerElement={{\r\n                            primaryText: 'With dynamic second line',\r\n                            secondaryText: 'Lorem ipsum dolor sit amet, consectetur adipiscing. Pellentesque commodo ultrices diam. Praesent in ipsum',\r\n                        }}\r\n                        onPress={() => {}}\r\n                    />\r\n                    <Subheader text=\"Custom\" />\r\n                    <ListItem\r\n                        divider\r\n                        leftElement=\"person\"\r\n                        centerElement={<Text>Custom center element</Text>}\r\n                    />\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nList.propTypes = propTypes;\r\nList.contextTypes = contextTypes;\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}