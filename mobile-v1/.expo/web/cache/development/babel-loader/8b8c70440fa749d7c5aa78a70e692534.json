{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\group project 2\\\\projectApp\\\\guardian-mobile\\\\screens\\\\secondScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { Actions, ActionConst } from 'react-native-router-flux';\nimport arrowImg from \"../image/la.svg\";\nvar SIZE = 40;\n\nvar SecondScreen = function (_Component) {\n  _inherits(SecondScreen, _Component);\n\n  var _super = _createSuper(SecondScreen);\n\n  function SecondScreen() {\n    var _this;\n\n    _classCallCheck(this, SecondScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      isLoading: false\n    };\n    _this._onPress = _this._onPress.bind(_assertThisInitialized(_this));\n    _this.growAnimated = new Animated.Value(0);\n    return _this;\n  }\n\n  _createClass(SecondScreen, [{\n    key: \"_onPress\",\n    value: function _onPress() {\n      if (this.state.isLoading) return;\n      this.setState({\n        isLoading: true\n      });\n      Animated.timing(this.growAnimated, {\n        toValue: 1,\n        duration: 300,\n        easing: Easing.linear\n      }).start();\n      setTimeout(function () {\n        Actions.pop();\n      }, 500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var changeScale = this.growAnimated.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, SIZE]\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this._onPress,\n        style: styles.button,\n        activeOpacity: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: arrowImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      })), React.createElement(Animated.View, {\n        style: [styles.circle, {\n          transform: [{\n            scale: changeScale\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SecondScreen;\n}(Component);\n\nexport { SecondScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 20,\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: SIZE,\n    height: SIZE,\n    borderRadius: 100,\n    zIndex: 99,\n    backgroundColor: '#F035E0'\n  },\n  circle: {\n    height: SIZE,\n    width: SIZE,\n    marginTop: -SIZE,\n    borderRadius: 100,\n    backgroundColor: '#F035E0'\n  },\n  image: {\n    width: 24,\n    height: 24\n  }\n});","map":{"version":3,"sources":["D:/PROJECTS/group project 2/projectApp/guardian-mobile/screens/secondScreen.js"],"names":["React","Component","PropTypes","Actions","ActionConst","arrowImg","SIZE","SecondScreen","state","isLoading","_onPress","bind","growAnimated","Animated","Value","setState","timing","toValue","duration","easing","Easing","linear","start","setTimeout","pop","changeScale","interpolate","inputRange","outputRange","styles","container","button","image","circle","transform","scale","StyleSheet","create","flex","margin","alignItems","justifyContent","width","height","borderRadius","zIndex","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  Animated,\r\n  Easing,\r\n} from 'react-native';\r\nimport {Actions, ActionConst} from 'react-native-router-flux';\r\n\r\nimport arrowImg from '../image/la.svg';\r\n\r\nconst SIZE = 40;\r\n\r\nexport default class SecondScreen extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n\r\n    this._onPress = this._onPress.bind(this);\r\n    this.growAnimated = new Animated.Value(0);\r\n  }\r\n\r\n  _onPress() {\r\n    if (this.state.isLoading) return;\r\n\r\n    this.setState({isLoading: true});\r\n\r\n    Animated.timing(this.growAnimated, {\r\n      toValue: 1,\r\n      duration: 300,\r\n      easing: Easing.linear,\r\n    }).start();\r\n\r\n    setTimeout(() => {\r\n      Actions.pop();\r\n    }, 500);\r\n  }\r\n\r\n  render() {\r\n    const changeScale = this.growAnimated.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [1, SIZE],\r\n    });\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <TouchableOpacity\r\n          onPress={this._onPress}\r\n          style={styles.button}\r\n          activeOpacity={1}>\r\n          <Image style={styles.image} source={arrowImg} />\r\n        </TouchableOpacity>\r\n        <Animated.View\r\n          style={[styles.circle, {transform: [{scale: changeScale}]}]}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    margin: 20,\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: SIZE,\r\n    height: SIZE,\r\n    borderRadius: 100,\r\n    zIndex: 99,\r\n    backgroundColor: '#F035E0',\r\n  },\r\n  circle: {\r\n    height: SIZE,\r\n    width: SIZE,\r\n    marginTop: -SIZE,\r\n    borderRadius: 100,\r\n    backgroundColor: '#F035E0',\r\n  },\r\n  image: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}