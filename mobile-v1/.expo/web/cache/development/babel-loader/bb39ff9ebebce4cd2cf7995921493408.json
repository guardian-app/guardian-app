{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\group project 2\\\\projectApp\\\\guardian-mobile\\\\screens\\\\resetScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { Actions, ActionConst } from 'react-native-router-flux';\nimport t from 'tcomb-form-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nvar Form = t.form.Form;\nglobal.pass = \"\";\nvar Email = t.refinement(t.String, function (email) {\n  var reg = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n  return reg.test(email);\n});\nvar Password = t.refinement(t.String, function (password) {\n  console.log('aaaaaaaaaawaaaaaaawawwwwwwwwwww');\n  global.pass = password;\n  var reg = /^(?=\\S+$).{8,}$/;\n  console.log(reg.test(password));\n  console.log('pppppp');\n  return reg.test(password);\n});\nvar Confirm = t.refinement(t.String, function (conPassword) {\n  console.log('cau cha');\n  console.log(global.pass);\n  console.log(conPassword);\n\n  if (conPassword != global.pass) {\n    return false;\n  } else {\n    return true;\n  }\n});\nvar User = t.struct({\n  username: Email,\n  KeyCode: t.String,\n  NewPassword: Password,\n  ConfirmPassword: Confirm\n});\n\nvar formStyles = _objectSpread(_objectSpread({}, Form.stylesheet), {}, {\n  formGroup: {\n    normal: {\n      marginBottom: 10\n    }\n  },\n  controlLabel: {\n    normal: {\n      color: 'blue',\n      fontSize: 18,\n      marginBottom: 7,\n      fontWeight: '600'\n    },\n    error: {\n      color: 'red',\n      fontSize: 18,\n      marginBottom: 7,\n      fontWeight: '600'\n    }\n  }\n});\n\nvar options = {\n  fields: {\n    KeyCode: {\n      error: 'Without an key code cannot reset password'\n    },\n    username: {\n      email: true,\n      error: 'Without an email address cannot reset password'\n    },\n    NewPassword: {\n      password: true,\n      secureTextEntry: true,\n      error: 'Choose something you use on a dozen other sites or something you won\\'t remember'\n    },\n    ConfirmPassword: {\n      password: true,\n      secureTextEntry: true,\n      error: 'Password confirmation failed'\n    }\n  },\n  stylesheet: formStyles\n};\n\nvar _onLogin = function _onLogin() {\n  setTimeout(function () {\n    Actions.LoginScreen();\n  }, 2300);\n};\n\nvar _onAlert = function _onAlert() {\n  setTimeout(function () {\n    Actions.RegistrationScreen();\n  }, 2300);\n};\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleSubmit = function () {\n      var value = _this._form.getValue();\n\n      console.log('value: ', value);\n      fetch(\"http://192.168.43.133:3000/users/reset\", {\n        method: \"PUT\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email_address: value.username,\n          reset_key: value.KeyCode,\n          password: value.NewPassword\n        })\n      }).then(function (response) {\n        console.log(\"ttttttttttttttttttt\");\n        console.log(response.status);\n\n        if (response.status == 200) {\n          console.log('done');\n          Alert.alert(\"Password Reset Successful\", \"Use application\", [{\n            text: \"OK\",\n            onPress: _onLogin()\n          }]);\n        } else if (response.status == 409) {\n          Alert.alert(\"Registration Failed!\", \"Email is already used\", [{\n            text: \"OK\",\n            onPress: {}\n          }]);\n        } else if (response.status == 404) {\n          Alert.alert(\"Password reset failed\", \"Verification key is expired!\", [{\n            text: \"OK\",\n            onPress: {}\n          }]);\n        } else {\n          return response;\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        console.log('Request succeeded with JSON response:', json);\n      }).catch(function (error) {\n        console.log('Request failed:', error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, React.createElement(Form, {\n        ref: function ref(c) {\n          return _this2._form = c;\n        },\n        type: User,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        color: \"#0020C2\",\n        title: \"Sign Up!\",\n        onPress: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    marginTop: 50,\n    padding: 20,\n    backgroundColor: '#ffffff'\n  }\n});","map":{"version":3,"sources":["D:/PROJECTS/group project 2/projectApp/guardian-mobile/screens/resetScreen.js"],"names":["React","Component","Actions","ActionConst","t","ScrollView","Form","form","global","pass","Email","refinement","String","email","reg","test","Password","password","console","log","Confirm","conPassword","User","struct","username","KeyCode","NewPassword","ConfirmPassword","formStyles","stylesheet","formGroup","normal","marginBottom","controlLabel","color","fontSize","fontWeight","error","options","fields","secureTextEntry","_onLogin","setTimeout","LoginScreen","_onAlert","RegistrationScreen","App","handleSubmit","value","_form","getValue","fetch","method","headers","body","JSON","stringify","email_address","reset_key","then","response","status","Alert","alert","text","onPress","json","catch","styles","container","c","StyleSheet","create","justifyContent","marginTop","padding","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, StyleSheet, Button,Alert,Animated,Easing } from 'react-native';\r\nimport {Actions, ActionConst} from 'react-native-router-flux';\r\n\r\nimport t from 'tcomb-form-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nconst Form = t.form.Form;\r\n \r\nglobal.pass = \"\";\r\n\r\nconst Email = t.refinement(t.String, (email) => {\r\n    const reg = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/; //or any other regexp\r\n    return reg.test(email);\r\n});\r\n\r\nconst Password = t.refinement(t.String, (password) => {\r\n  console.log('aaaaaaaaaawaaaaaaawawwwwwwwwwww');\r\n    global.pass = password;\r\n    const reg = /^(?=\\S+$).{8,}$/;\r\n    console.log(reg.test(password))\r\n    console.log('pppppp')\r\n    return reg.test(password);\r\n}); \r\n\r\nconst Confirm = t.refinement(t.String, (conPassword)=>{\r\n  console.log('cau cha')\r\n  console.log(global.pass)\r\n  console.log(conPassword);\r\n  if(conPassword != global.pass){\r\n    return false;\r\n  }\r\n  else{\r\n    return true;\r\n  }\r\n})\r\n\r\nconst User = t.struct({\r\n  username: Email,\r\n  KeyCode: t.String,\r\n  NewPassword: Password,\r\n  ConfirmPassword: Confirm,\r\n});\r\n\r\nconst formStyles = {\r\n  ...Form.stylesheet,\r\n  formGroup: {\r\n    normal: {\r\n      marginBottom: 10\r\n    },\r\n  },\r\n  controlLabel: {\r\n    normal: {\r\n      color: 'blue',\r\n      fontSize: 18,\r\n      marginBottom: 7,\r\n      fontWeight: '600'\r\n    },\r\n    // the style applied when a validation error occours\r\n    error: {\r\n      color: 'red',\r\n      fontSize: 18,\r\n      marginBottom: 7,\r\n      fontWeight: '600'\r\n    }\r\n  }\r\n}\r\n\r\nconst options = {\r\n  fields: {\r\n    KeyCode: {\r\n        error: 'Without an key code cannot reset password'\r\n    },  \r\n    username: {\r\n      email: true,\r\n      error: 'Without an email address cannot reset password'\r\n    },\r\n    NewPassword: {\r\n      password: true,\r\n      secureTextEntry: true,\r\n      error: 'Choose something you use on a dozen other sites or something you won\\'t remember'\r\n    },\r\n    ConfirmPassword : {\r\n      password: true,\r\n      secureTextEntry: true,\r\n      error: 'Password confirmation failed'\r\n    },\r\n  },\r\n  stylesheet: formStyles,\r\n};\r\n\r\nconst _onLogin = () =>{\r\n\r\n  setTimeout(() => {\r\n    Actions.LoginScreen();\r\n  }, 2300);\r\n}\r\n\r\nconst _onAlert=()=> {\r\n  setTimeout(() => {\r\n    Actions.RegistrationScreen();\r\n  }, 2300);\r\n}\r\n\r\nexport default class App extends Component {\r\n\r\n  handleSubmit = () => {\r\n    const value = this._form.getValue();\r\n    console.log('value: ', value);\r\n    \r\n    ///fetch eka\r\n\r\n    fetch(\"http://192.168.43.133:3000/users/reset\",{\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email_address : value.username,\r\n        reset_key: value.KeyCode,\r\n        password: value.NewPassword,\r\n      })\r\n\r\n    })\r\n    .then(function(response) {\r\n      \r\n      console.log(\"ttttttttttttttttttt\")\r\n      console.log(response.status);\r\n      if(response.status == 200){\r\n        console.log('done')\r\n        Alert.alert(\r\n          \"Password Reset Successful\",\r\n          \"Use application\",\r\n          [\r\n            { text: \"OK\", onPress: _onLogin() }\r\n          ]\r\n        )\r\n      }\r\n      else if(response.status == 409){\r\n        Alert.alert(\r\n          \"Registration Failed!\",\r\n          \"Email is already used\",\r\n          [\r\n            { text: \"OK\",onPress: {}  }\r\n          ]\r\n        )\r\n      } \r\n      else if(response.status == 404){\r\n        Alert.alert(\r\n          \"Password reset failed\",\r\n          \"Verification key is expired!\",\r\n          [\r\n            { text: \"OK\",onPress: {}  }\r\n          ]\r\n        )\r\n      } \r\n      else{\r\n        return response;\r\n      }\r\n\r\n      // if (response.ok) {\r\n      //   console.log(\"ok\",response.ok,\"ok\")\r\n      //   return response;\r\n      // }\r\n      \r\n      // throw Error(response.statusText);\r\n    }).then(function(response) {\r\n      return response.json();\r\n    }).then(function(json) {\r\n      console.log('Request succeeded with JSON response:', json);\r\n    }).catch(function(error) {\r\n      console.log('Request failed:', error);\r\n    });\r\n\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ScrollView>\r\n            <Form \r\n            ref={c => this._form = c}\r\n            type={User} \r\n            options={options}\r\n            />\r\n            <Button\r\n            color=\"#0020C2\"\r\n            title=\"Sign Up!\"\r\n            onPress={this.handleSubmit}\r\n            />\r\n        </ScrollView>\r\n        \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    marginTop: 50,\r\n    padding: 20,\r\n    backgroundColor: '#ffffff',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}