{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\group project 2\\\\projectApp\\\\guardian-mobile\\\\Drawer\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Avatar, Drawer, Toolbar } from 'react-native-material-ui';\nimport Container from \"../Container\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: 260,\n    elevation: 4,\n    backgroundColor: 'white'\n  }\n});\nvar propTypes = {\n  navigation: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired\n};\n\nvar DrawerSpec = function (_Component) {\n  _inherits(DrawerSpec, _Component);\n\n  var _super = _createSuper(DrawerSpec);\n\n  function DrawerSpec() {\n    _classCallCheck(this, DrawerSpec);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DrawerSpec, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, React.createElement(Toolbar, {\n        leftElement: \"arrow-back\",\n        onLeftElementPress: function onLeftElementPress() {\n          return _this.props.navigation.goBack();\n        },\n        centerElement: \"Dialog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, React.createElement(Drawer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, React.createElement(Drawer.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      }, React.createElement(Drawer.Header.Account, {\n        avatar: React.createElement(Avatar, {\n          text: \"A\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 41\n          }\n        }),\n        accounts: [{\n          avatar: React.createElement(Avatar, {\n            text: \"B\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 47\n            }\n          }),\n          key: 'b'\n        }, {\n          avatar: React.createElement(Avatar, {\n            text: \"C\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 47\n            }\n          }),\n          key: 'c'\n        }],\n        footer: {\n          dense: true,\n          centerElement: {\n            primaryText: 'Reservio',\n            secondaryText: 'business@email.com'\n          },\n          rightElement: 'arrow-drop-down'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      })), React.createElement(Drawer.Section, {\n        divider: true,\n        items: [{\n          icon: 'bookmark-border',\n          value: 'Notifications'\n        }, {\n          icon: 'today',\n          value: 'Calendar',\n          active: true\n        }, {\n          icon: 'people',\n          value: 'Clients'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }), React.createElement(Drawer.Section, {\n        title: \"Personal\",\n        items: [{\n          icon: 'info',\n          value: 'Info'\n        }, {\n          icon: 'settings',\n          value: 'Settings'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return DrawerSpec;\n}(Component);\n\nDrawerSpec.propTypes = propTypes;\nexport default DrawerSpec;","map":{"version":3,"sources":["D:/PROJECTS/group project 2/projectApp/guardian-mobile/Drawer/index.js"],"names":["React","Component","PropTypes","Avatar","Drawer","Toolbar","Container","styles","StyleSheet","create","container","flex","width","elevation","backgroundColor","propTypes","navigation","shape","goBack","func","isRequired","DrawerSpec","props","avatar","key","dense","centerElement","primaryText","secondaryText","rightElement","icon","value","active"],"mappings":"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","sourcesContent":["import { View, StyleSheet } from 'react-native';\r\nimport React, { Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport { Avatar, Drawer, Toolbar } from 'react-native-material-ui';\r\nimport Container from '../Container';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        width: 260,\r\n        elevation: 4,\r\n        backgroundColor: 'white',\r\n    },\r\n});\r\n\r\nconst propTypes = {\r\n    navigation: PropTypes.shape({\r\n        goBack: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nclass DrawerSpec extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Toolbar\r\n                    leftElement=\"arrow-back\"\r\n                    onLeftElementPress={() => this.props.navigation.goBack()}\r\n                    centerElement=\"Dialog\"\r\n                />\r\n                <View style={styles.container}>\r\n                    <Drawer>\r\n                        <Drawer.Header >\r\n                            <Drawer.Header.Account\r\n                                avatar={<Avatar text=\"A\" />}\r\n                                accounts={[\r\n                                    { avatar: <Avatar text=\"B\" />, key: 'b' },\r\n                                    { avatar: <Avatar text=\"C\" />, key: 'c' },\r\n                                ]}\r\n                                footer={{\r\n                                    dense: true,\r\n                                    centerElement: {\r\n                                        primaryText: 'Reservio',\r\n                                        secondaryText: 'business@email.com',\r\n                                    },\r\n                                    rightElement: 'arrow-drop-down',\r\n                                }}\r\n                            />\r\n                        </Drawer.Header>\r\n                        <Drawer.Section\r\n                            divider\r\n                            items={[\r\n                                { icon: 'bookmark-border', value: 'Notifications' },\r\n                                { icon: 'today', value: 'Calendar', active: true },\r\n                                { icon: 'people', value: 'Clients' },\r\n                            ]}\r\n                        />\r\n                        <Drawer.Section\r\n                            title=\"Personal\"\r\n                            items={[\r\n                                { icon: 'info', value: 'Info' },\r\n                                { icon: 'settings', value: 'Settings' },\r\n                            ]}\r\n                        />\r\n                    </Drawer>\r\n                </View>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nDrawerSpec.propTypes = propTypes;\r\n\r\nexport default DrawerSpec;\r\n"]},"metadata":{},"sourceType":"module"}