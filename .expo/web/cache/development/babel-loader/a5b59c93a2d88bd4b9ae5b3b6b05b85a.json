{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\group project 2\\\\projectApp\\\\guardian-mobile\\\\Toolbars\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Container from \"../Container\";\nimport { Toolbar, Button, COLOR } from 'react-native-material-ui';\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 16\n  }\n});\nvar propTypes = {\n  navigation: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired\n};\n\nvar ToolbarSpec = function (_Component) {\n  _inherits(ToolbarSpec, _Component);\n\n  var _super = _createSuper(ToolbarSpec);\n\n  function ToolbarSpec() {\n    _classCallCheck(this, ToolbarSpec);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ToolbarSpec, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, React.createElement(Toolbar, {\n        leftElement: \"arrow-back\",\n        onLeftElementPress: function onLeftElementPress() {\n          return _this.props.navigation.goBack();\n        },\n        centerElement: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, React.createElement(Toolbar, {\n        centerElement: \"With menu\",\n        rightElement: {\n          actions: ['edit'],\n          menu: {\n            labels: ['Item 1', 'Item 2']\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, React.createElement(Toolbar, {\n        leftElement: \"menu\",\n        centerElement: \"Searchable\",\n        searchable: {\n          autoFocus: true,\n          placeholder: 'Search'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(Toolbar, {\n        leftElement: \"clear\",\n        centerElement: \"With button\",\n        rightElement: React.createElement(Button, {\n          text: \"Save\",\n          style: {\n            text: {\n              color: 'white'\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, React.createElement(Toolbar, {\n        size: 16,\n        leftElement: \"clear\",\n        centerElement: \"Custom icon size\",\n        rightElement: {\n          actions: ['edit'],\n          menu: {\n            labels: ['Item 1', 'Item 2']\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(Toolbar, {\n        leftElement: \"clear\",\n        centerElement: \"Custom styles\",\n        rightElement: {\n          actions: ['edit'],\n          menu: {\n            labels: ['Item 1', 'Item 2']\n          }\n        },\n        style: {\n          container: {\n            backgroundColor: COLOR.orange300\n          },\n          leftElement: {\n            color: COLOR.orange900\n          },\n          titleText: {\n            color: COLOR.orange900\n          },\n          rightElement: {\n            color: COLOR.orange900\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, React.createElement(Toolbar, {\n        centerElement: \"Only title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return ToolbarSpec;\n}(Component);\n\nToolbarSpec.propTypes = propTypes;\nexport default ToolbarSpec;","map":{"version":3,"sources":["D:/PROJECTS/group project 2/projectApp/guardian-mobile/Toolbars/index.js"],"names":["React","Component","PropTypes","Container","Toolbar","Button","COLOR","styles","StyleSheet","create","container","paddingTop","propTypes","navigation","shape","goBack","func","isRequired","ToolbarSpec","props","actions","menu","labels","autoFocus","placeholder","text","color","backgroundColor","orange300","leftElement","orange900","titleText","rightElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport Container from '../Container';\r\n\r\nimport { Toolbar, Button, COLOR } from 'react-native-material-ui';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: 16,\r\n    },\r\n});\r\n\r\nconst propTypes = {\r\n    navigation: PropTypes.shape({\r\n        goBack: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nclass ToolbarSpec extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Toolbar\r\n                    leftElement=\"arrow-back\"\r\n                    onLeftElementPress={() => this.props.navigation.goBack()}\r\n                    centerElement=\"Title\"\r\n                />\r\n                <View style={styles.container}>\r\n                    <Toolbar\r\n                        centerElement=\"With menu\"\r\n                        rightElement={{\r\n                            actions: ['edit'],\r\n                            menu: { labels: ['Item 1', 'Item 2'] },\r\n                        }}\r\n                    />\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <Toolbar\r\n                        leftElement=\"menu\"\r\n                        centerElement=\"Searchable\"\r\n                        searchable={{\r\n                            autoFocus: true,\r\n                            placeholder: 'Search',\r\n                        }}\r\n                    />\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <Toolbar\r\n                        leftElement=\"clear\"\r\n                        centerElement=\"With button\"\r\n                        rightElement={\r\n                            <Button\r\n                                text=\"Save\"\r\n                                style={{ text: { color: 'white' } }}\r\n                            />\r\n                        }\r\n                    />\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <Toolbar\r\n                        size={16}\r\n                        leftElement=\"clear\"\r\n                        centerElement=\"Custom icon size\"\r\n                        rightElement={{\r\n                            actions: ['edit'],\r\n                            menu: { labels: ['Item 1', 'Item 2'] },\r\n                        }}\r\n                    />\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <Toolbar\r\n                        leftElement=\"clear\"\r\n                        centerElement=\"Custom styles\"\r\n                        rightElement={{\r\n                            actions: ['edit'],\r\n                            menu: { labels: ['Item 1', 'Item 2'] },\r\n                        }}\r\n                        style={{\r\n                            container: { backgroundColor: COLOR.orange300 },\r\n                            leftElement: { color: COLOR.orange900 },\r\n                            titleText: { color: COLOR.orange900 },\r\n                            rightElement: { color: COLOR.orange900 },\r\n                        }}\r\n                    />\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <Toolbar centerElement=\"Only title\" />\r\n                </View>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nToolbarSpec.propTypes = propTypes;\r\n\r\nexport default ToolbarSpec;\r\n"]},"metadata":{},"sourceType":"module"}