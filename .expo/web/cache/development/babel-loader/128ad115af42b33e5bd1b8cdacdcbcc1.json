{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\group project 2\\\\projectApp\\\\guardian-mobile\\\\screens\\\\all.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { connect } from 'react-redux';\nimport 'localstorage-polyfill';\nimport { Actions, ActionConst } from 'react-native-router-flux';\nimport routes from \"../routes\";\nimport Container from \"../Container\";\nimport List from \"../List/index\";\nimport { ActionButton, Avatar, ListItem, Toolbar, BottomNavigation, Icon } from 'react-native-material-ui/src';\nimport { createIconSetFromFontello } from \"@expo/vector-icons\";\nvar UP = 1;\nvar DOWN = -1;\nvar propTypes = {\n  navigation: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};\n\nvar Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n\n    _this.onAvatarPressed = function (value) {\n      console.log('Avatar');\n      console.log('Avatarqqqqqqqqqq');\n      var selected = _this.state.selected;\n      console.log(selected);\n      var index = selected.indexOf(value);\n\n      if (index >= 0) {\n        selected.splice(index, 1);\n      } else {\n        selected.push(value);\n      }\n\n      _this.setState({\n        selected: selected\n      });\n    };\n\n    _this.onScroll = function (ev) {\n      var currentOffset = ev.nativeEvent.contentOffset.y;\n      var sub = _this.offset - currentOffset;\n\n      if (sub > -2 && sub < 2) {\n        return;\n      }\n\n      _this.offset = ev.nativeEvent.contentOffset.y;\n      var currentDirection = sub > 0 ? UP : DOWN;\n\n      if (_this.scrollDirection !== currentDirection) {\n        _this.scrollDirection = currentDirection;\n\n        _this.setState({\n          bottomHidden: currentDirection === DOWN\n        });\n      }\n    };\n\n    _this.show = function () {\n      Animated.timing(_this.state.moveAnimated, {\n        toValue: 0,\n        duration: 225,\n        easing: Easing.bezier(0.0, 0.0, 0.2, 1),\n        useNativeDriver: Platform.OS === 'android'\n      }).start();\n    };\n\n    _this.hide = function () {\n      Animated.timing(_this.state.moveAnimated, {\n        toValue: 56,\n        duration: 195,\n        easing: Easing.bezier(0.4, 0.0, 0.6, 1),\n        useNativeDriver: Platform.OS === 'android'\n      }).start();\n    };\n\n    _this.renderToolbar = function () {\n      if (_this.state.selected.length > 0) {\n        return React.createElement(Toolbar, {\n          key: \"toolbar\",\n          leftElement: \"clear\",\n          onLeftElementPress: function onLeftElementPress() {\n            return _this.setState({\n              selected: []\n            });\n          },\n          centerElement: _this.state.selected.length.toString(),\n          rightElement: ['delete'],\n          style: {\n            container: {\n              backgroundColor: 'white'\n            },\n            titleText: {\n              color: 'rgba(0,0,0,.87)'\n            },\n            leftElement: {\n              color: 'rgba(0,0,0,.54)'\n            },\n            rightElement: {\n              color: 'rgba(0,0,0,.54)'\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return React.createElement(Toolbar, {\n        key: \"toolbar\",\n        leftElement: \"menu\",\n        onLeftElementPress: function onLeftElementPress() {\n          return _this.props.navigation.FrontScreen();\n        },\n        centerElement: \"Home\",\n        searchable: {\n          autoFocus: true,\n          placeholder: 'Search',\n          onChangeText: function onChangeText(value) {\n            return _this.setState({\n              searchText: value\n            });\n          },\n          onSearchClosed: function onSearchClosed() {\n            return _this.setState({\n              searchText: ''\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.renderItem = function (title, route) {\n      var searchText = _this.state.searchText.toLowerCase();\n\n      if (searchText.length > 0 && title.toLowerCase().indexOf(searchText) < 0) {\n        return null;\n      }\n\n      return React.createElement(ListItem, {\n        divider: true,\n        leftElement: React.createElement(Avatar, {\n          text: title[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 30\n          }\n        }),\n        onLeftElementPress: function onLeftElementPress() {\n          return _this.onAvatarPressed(title);\n        },\n        centerElement: title,\n        onPress: function onPress() {\n          return _this.props.navigation.navigate(route);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.offset = 0;\n    _this.scrollDirection = 0;\n    _this.state = {\n      selected: [],\n      searchText: '',\n      active: 'people',\n      moveAnimated: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('eeeeeeeeeeeeeeeeee');\n      console.log(localStorage.getItem(\"key\"));\n\n      if (!localStorage.getItem(\"key\")) {\n        Actions.LoginScreen();\n      }\n\n      var url = 'http://192.168.43.133:3000/users/me';\n      var token = localStorage.getItem(\"key\");\n      console.log('nnn');\n      console.log(token);\n      console.log('mmm');\n      fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      }).then(function (response) {\n        console.log(\"ttttttttttttttttttt\");\n        console.log(response.status);\n\n        if (response.status == 409) {\n          Alert.alert(\"Registration Failed!\", \"Email is already used\", [{\n            text: \"OK\",\n            onPress: _onAlert()\n          }]);\n        } else if (response.status == 401) {} else if (response.status == 403) {} else {\n          return response;\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        console.log('Request succeeded with JSON response:', json);\n      }).catch(function (error) {\n        console.log('Request failed:', error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var run = function run() {\n        console.log(\"run\");\n      };\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, this.renderToolbar(), React.createElement(ScrollView, {\n        keyboardShouldPersistTaps: \"always\",\n        keyboardDismissMode: \"interactive\",\n        onScroll: this.onScroll,\n        onPress: run(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }, this.renderItem('Action button', 'actionButton'), this.renderItem('Avatars', 'avatar'), this.renderItem('Badge', 'badge'), this.renderItem('Bottom navigation', 'bottomNavigation'), this.renderItem('Buttons', 'button'), this.renderItem('Cards', 'card'), this.renderItem('Checkbox', 'checkbox'), this.renderItem('Dialog', 'dialog'), this.renderItem('Drawer', 'drawer'), this.renderItem('Icon toggles', 'iconToggle'), this.renderItem('List items', 'list')), React.createElement(ActionButton, {\n        actions: [{\n          icon: 'email',\n          label: 'Email'\n        }, {\n          icon: 'phone',\n          label: 'Phone'\n        }, {\n          icon: 'sms',\n          label: 'Text'\n        }, {\n          icon: 'favorite',\n          label: 'Favorite'\n        }],\n        hidden: this.state.bottomHidden,\n        icon: \"share\",\n        transition: \"speedDial\",\n        onPress: function onPress(action) {\n          if (Platform.OS === 'android') {\n            ToastAndroid.show(action, ToastAndroid.SHORT);\n          }\n        },\n        style: {\n          positionContainer: {\n            bottom: 76\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }\n      }), React.createElement(BottomNavigation, {\n        active: this.state.active,\n        hidden: this.state.bottomHidden,\n        style: {\n          container: {\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }\n      }, React.createElement(BottomNavigation.Action, {\n        key: \"today\",\n        icon: React.createElement(Icon, {\n          name: \"today\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 31\n          }\n        }),\n        label: \"Today\",\n        onPress: function onPress() {\n          return _this2.setState({\n            active: 'today'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      }), React.createElement(BottomNavigation.Action, {\n        key: \"profile\",\n        icon: \"profile\",\n        label: \"Profile\",\n        onPress: function onPress() {\n          return _this2.setState({\n            active: 'profile'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }\n      }), React.createElement(BottomNavigation.Action, {\n        key: \"bookmark-border\",\n        icon: \"bookmark-border\",\n        label: \"Bookmark\",\n        onPress: function onPress() {\n          return _this2.setState({\n            active: 'bookmark-border'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }), React.createElement(BottomNavigation.Action, {\n        key: \"settings\",\n        icon: \"settings\",\n        label: \"Settings\",\n        onPress: function onPress() {\n          return _this2.setState({\n            active: 'settings'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nHome.propTypes = propTypes;\nexport default Home;","map":{"version":3,"sources":["D:/PROJECTS/group project 2/projectApp/guardian-mobile/screens/all.js"],"names":["React","Component","PropTypes","connect","Actions","ActionConst","routes","Container","List","ActionButton","Avatar","ListItem","Toolbar","BottomNavigation","Icon","createIconSetFromFontello","UP","DOWN","propTypes","navigation","shape","goBack","func","isRequired","navigate","Home","props","onAvatarPressed","value","console","log","selected","state","index","indexOf","splice","push","setState","onScroll","ev","currentOffset","nativeEvent","contentOffset","y","sub","offset","currentDirection","scrollDirection","bottomHidden","show","Animated","timing","moveAnimated","toValue","duration","easing","Easing","bezier","useNativeDriver","Platform","OS","start","hide","renderToolbar","length","toString","container","backgroundColor","titleText","color","leftElement","rightElement","FrontScreen","autoFocus","placeholder","onChangeText","searchText","onSearchClosed","renderItem","title","route","toLowerCase","active","Value","localStorage","getItem","LoginScreen","url","token","fetch","method","headers","then","response","status","Alert","alert","text","onPress","_onAlert","json","catch","error","run","icon","label","action","ToastAndroid","SHORT","positionContainer","bottom","position","left","right"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,uBAAP;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,0BAAnC;AAEA,OAAOC,MAAP;AAEA,OAAOC,SAAP;AACA,OAAOC,IAAP;AAEA,SACIC,YADJ,EAEIC,MAFJ,EAGIC,QAHJ,EAIIC,OAJJ,EAKIC,gBALJ,EAMIC,IANJ,QAOO,8BAPP;AAQA,SAASC,yBAAT;AAEA,IAAMC,EAAE,GAAG,CAAX;AACA,IAAMC,IAAI,GAAG,CAAC,CAAd;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAEjB,SAAS,CAACkB,KAAV,CAAgB;AACxBC,IAAAA,MAAM,EAAEnB,SAAS,CAACoB,IAAV,CAAeC,UADC;AAExBC,IAAAA,QAAQ,EAAEtB,SAAS,CAACoB,IAAV,CAAeC;AAFD,GAAhB,EAGTA;AAJW,CAAlB;;IAOME,I;;;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAiFnBC,eAjFmB,GAiFD,UAACC,KAAD,EAAW;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAFyB,UAGjBC,QAHiB,GAGJ,MAAKC,KAHD,CAGjBD,QAHiB;AAIzBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,UAAME,KAAK,GAAGF,QAAQ,CAACG,OAAT,CAAiBN,KAAjB,CAAd;;AAEA,UAAIK,KAAK,IAAI,CAAb,EAAgB;AAEZF,QAAAA,QAAQ,CAACI,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AACH,OAHD,MAGO;AAEHF,QAAAA,QAAQ,CAACK,IAAT,CAAcR,KAAd;AACH;;AAED,YAAKS,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACH,KAjGkB;;AAAA,UAkGnBO,QAlGmB,GAkGR,UAACC,EAAD,EAAQ;AACf,UAAMC,aAAa,GAAGD,EAAE,CAACE,WAAH,CAAeC,aAAf,CAA6BC,CAAnD;AAEA,UAAMC,GAAG,GAAG,MAAKC,MAAL,GAAcL,aAA1B;;AAGA,UAAII,GAAG,GAAG,CAAC,CAAP,IAAYA,GAAG,GAAG,CAAtB,EAAyB;AACrB;AACH;;AAED,YAAKC,MAAL,GAAcN,EAAE,CAACE,WAAH,CAAeC,aAAf,CAA6BC,CAA3C;AAEA,UAAMG,gBAAgB,GAAGF,GAAG,GAAG,CAAN,GAAU5B,EAAV,GAAeC,IAAxC;;AAEA,UAAI,MAAK8B,eAAL,KAAyBD,gBAA7B,EAA+C;AAC3C,cAAKC,eAAL,GAAuBD,gBAAvB;;AAEA,cAAKT,QAAL,CAAc;AACVW,UAAAA,YAAY,EAAEF,gBAAgB,KAAK7B;AADzB,SAAd;AAGH;AACJ,KAvHkB;;AAAA,UAwHnBgC,IAxHmB,GAwHZ,YAAM;AACTC,MAAAA,QAAQ,CAACC,MAAT,CAAgB,MAAKnB,KAAL,CAAWoB,YAA3B,EAAyC;AACrCC,QAAAA,OAAO,EAAE,CAD4B;AAErCC,QAAAA,QAAQ,EAAE,GAF2B;AAGrCC,QAAAA,MAAM,EAAEC,MAAM,CAACC,MAAP,CAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,CAA7B,CAH6B;AAIrCC,QAAAA,eAAe,EAAEC,QAAQ,CAACC,EAAT,KAAgB;AAJI,OAAzC,EAKGC,KALH;AAMH,KA/HkB;;AAAA,UAgInBC,IAhImB,GAgIZ,YAAM;AACTZ,MAAAA,QAAQ,CAACC,MAAT,CAAgB,MAAKnB,KAAL,CAAWoB,YAA3B,EAAyC;AACrCC,QAAAA,OAAO,EAAE,EAD4B;AAErCC,QAAAA,QAAQ,EAAE,GAF2B;AAGrCC,QAAAA,MAAM,EAAEC,MAAM,CAACC,MAAP,CAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,CAA7B,CAH6B;AAIrCC,QAAAA,eAAe,EAAEC,QAAQ,CAACC,EAAT,KAAgB;AAJI,OAAzC,EAKGC,KALH;AAMH,KAvIkB;;AAAA,UAwInBE,aAxImB,GAwIH,YAAM;AAClB,UAAI,MAAK/B,KAAL,CAAWD,QAAX,CAAoBiC,MAApB,GAA6B,CAAjC,EAAoC;AAChC,eACI,oBAAC,OAAD;AACI,UAAA,GAAG,EAAC,SADR;AAEI,UAAA,WAAW,EAAC,OAFhB;AAGI,UAAA,kBAAkB,EAAE;AAAA,mBAAM,MAAK3B,QAAL,CAAc;AAAEN,cAAAA,QAAQ,EAAE;AAAZ,aAAd,CAAN;AAAA,WAHxB;AAII,UAAA,aAAa,EAAE,MAAKC,KAAL,CAAWD,QAAX,CAAoBiC,MAApB,CAA2BC,QAA3B,EAJnB;AAKI,UAAA,YAAY,EAAE,CAAC,QAAD,CALlB;AAMI,UAAA,KAAK,EAAE;AACHC,YAAAA,SAAS,EAAE;AAAEC,cAAAA,eAAe,EAAE;AAAnB,aADR;AAEHC,YAAAA,SAAS,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAFR;AAGHC,YAAAA,WAAW,EAAE;AAAED,cAAAA,KAAK,EAAE;AAAT,aAHV;AAIHE,YAAAA,YAAY,EAAE;AAAEF,cAAAA,KAAK,EAAE;AAAT;AAJX,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;AACD,aACI,oBAAC,OAAD;AACI,QAAA,GAAG,EAAC,SADR;AAEI,QAAA,WAAW,EAAC,MAFhB;AAGI,QAAA,kBAAkB,EAAE;AAAA,iBAAM,MAAK3C,KAAL,CAAWP,UAAX,CAAsBqD,WAAtB,EAAN;AAAA,SAHxB;AAII,QAAA,aAAa,EAAC,MAJlB;AAKI,QAAA,UAAU,EAAE;AACRC,UAAAA,SAAS,EAAE,IADH;AAERC,UAAAA,WAAW,EAAE,QAFL;AAGRC,UAAAA,YAAY,EAAE,sBAAA/C,KAAK;AAAA,mBAAI,MAAKS,QAAL,CAAc;AAAEuC,cAAAA,UAAU,EAAEhD;AAAd,aAAd,CAAJ;AAAA,WAHX;AAIRiD,UAAAA,cAAc,EAAE;AAAA,mBAAM,MAAKxC,QAAL,CAAc;AAAEuC,cAAAA,UAAU,EAAE;AAAd,aAAd,CAAN;AAAA;AAJR,SALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAcH,KAxKkB;;AAAA,UAyKnBE,UAzKmB,GAyKN,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC3B,UAAMJ,UAAU,GAAG,MAAK5C,KAAL,CAAW4C,UAAX,CAAsBK,WAAtB,EAAnB;;AAEA,UAAIL,UAAU,CAACZ,MAAX,GAAoB,CAApB,IAAyBe,KAAK,CAACE,WAAN,GAAoB/C,OAApB,CAA4B0C,UAA5B,IAA0C,CAAvE,EAA0E;AACtE,eAAO,IAAP;AACH;;AAED,aACI,oBAAC,QAAD;AACI,QAAA,OAAO,MADX;AAEI,QAAA,WAAW,EAAE,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAEG,KAAK,CAAC,CAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFjB;AAGI,QAAA,kBAAkB,EAAE;AAAA,iBAAM,MAAKpD,eAAL,CAAqBoD,KAArB,CAAN;AAAA,SAHxB;AAII,QAAA,aAAa,EAAEA,KAJnB;AAKI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKrD,KAAL,CAAWP,UAAX,CAAsBK,QAAtB,CAA+BwD,KAA/B,CAAN;AAAA,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUH,KA1LkB;;AAGf,UAAKnC,MAAL,GAAc,CAAd;AACA,UAAKE,eAAL,GAAuB,CAAvB;AAEA,UAAKf,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,EADD;AAET6C,MAAAA,UAAU,EAAE,EAFH;AAGTM,MAAAA,MAAM,EAAE,QAHC;AAIT9B,MAAAA,YAAY,EAAE,IAAIF,QAAQ,CAACiC,KAAb,CAAmB,CAAnB;AAJL,KAAb;AANe;AAYlB;;;;wCAEkB;AACftD,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYsD,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;;AAGA,UAAG,CAACD,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAgC;AAC5BjF,QAAAA,OAAO,CAACkF,WAAR;AACH;;AAGD,UAAIC,GAAG,GAAG,qCAAV;AACA,UAAIC,KAAK,GAAGJ,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACAxD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY0D,KAAZ;AACA3D,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAGA2D,MAAAA,KAAK,CAACF,GAAD,EAAK;AACNG,QAAAA,MAAM,EAAE,KADF;AAENC,QAAAA,OAAO,EAAE;AAGL,2BAAiB,YAAUH;AAHtB;AAFH,OAAL,CAAL,CASKI,IATL,CASU,UAASC,QAAT,EAAmB;AAEzBhE,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY+D,QAAQ,CAACC,MAArB;;AACA,YAAGD,QAAQ,CAACC,MAAT,IAAmB,GAAtB,EAA0B;AACtBC,UAAAA,KAAK,CAACC,KAAN,CACA,sBADA,EAEA,uBAFA,EAGA,CACI;AAAEC,YAAAA,IAAI,EAAE,IAAR;AAAaC,YAAAA,OAAO,EAAEC,QAAQ;AAA9B,WADJ,CAHA;AAOH,SARD,MASK,IAAGN,QAAQ,CAACC,MAAT,IAAmB,GAAtB,EAA0B,CAE9B,CAFI,MAGA,IAAGD,QAAQ,CAACC,MAAT,IAAmB,GAAtB,EAA0B,CAE9B,CAFI,MAGD;AACA,iBAAOD,QAAP;AACH;AAQA,OAtCL,EAsCOD,IAtCP,CAsCY,UAASC,QAAT,EAAmB;AAC3B,eAAOA,QAAQ,CAACO,IAAT,EAAP;AACC,OAxCL,EAwCOR,IAxCP,CAwCY,UAASQ,IAAT,EAAe;AACvBvE,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDsE,IAArD;AACC,OA1CL,EA0COC,KA1CP,CA0Ca,UAASC,KAAT,EAAgB;AACzBzE,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BwE,KAA/B;AACC,OA5CL;AA8CH;;;6BA8GQ;AAAA;;AAEL,UAAMC,GAAG,GAAE,SAALA,GAAK,GAAK;AACZ1E,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,OAFD;;AAIA,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKiC,aAAL,EADL,EAEI,oBAAC,UAAD;AACI,QAAA,yBAAyB,EAAC,QAD9B;AAEI,QAAA,mBAAmB,EAAC,aAFxB;AAGI,QAAA,QAAQ,EAAE,KAAKzB,QAHnB;AAII,QAAA,OAAO,EAAEiE,GAAG,EAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMK,KAAKzB,UAAL,CAAgB,eAAhB,EAAiC,cAAjC,CANL,EAOK,KAAKA,UAAL,CAAgB,SAAhB,EAA2B,QAA3B,CAPL,EAQK,KAAKA,UAAL,CAAgB,OAAhB,EAAyB,OAAzB,CARL,EASK,KAAKA,UAAL,CAAgB,mBAAhB,EAAqC,kBAArC,CATL,EAUK,KAAKA,UAAL,CAAgB,SAAhB,EAA2B,QAA3B,CAVL,EAWK,KAAKA,UAAL,CAAgB,OAAhB,EAAyB,MAAzB,CAXL,EAYK,KAAKA,UAAL,CAAgB,UAAhB,EAA4B,UAA5B,CAZL,EAaK,KAAKA,UAAL,CAAgB,QAAhB,EAA0B,QAA1B,CAbL,EAcK,KAAKA,UAAL,CAAgB,QAAhB,EAA0B,QAA1B,CAdL,EAeK,KAAKA,UAAL,CAAgB,cAAhB,EAAgC,YAAhC,CAfL,EAgBK,KAAKA,UAAL,CAAgB,YAAhB,EAA8B,MAA9B,CAhBL,CAFJ,EAqBI,oBAAC,YAAD;AACI,QAAA,OAAO,EAAE,CACL;AAAE0B,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SADK,EAEL;AAAED,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SAFK,EAGL;AAAED,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SAHK,EAIL;AAAED,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SAJK,CADb;AAOI,QAAA,MAAM,EAAE,KAAKzE,KAAL,CAAWgB,YAPvB;AAQI,QAAA,IAAI,EAAC,OART;AASI,QAAA,UAAU,EAAC,WATf;AAUI,QAAA,OAAO,EAAE,iBAAC0D,MAAD,EAAY;AACjB,cAAI/C,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC3B+C,YAAAA,YAAY,CAAC1D,IAAb,CAAkByD,MAAlB,EAA0BC,YAAY,CAACC,KAAvC;AACH;AACJ,SAdL;AAeI,QAAA,KAAK,EAAE;AACHC,UAAAA,iBAAiB,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AADhB,SAfX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBJ,EAwCI,oBAAC,gBAAD;AACI,QAAA,MAAM,EAAE,KAAK9E,KAAL,CAAWkD,MADvB;AAEI,QAAA,MAAM,EAAE,KAAKlD,KAAL,CAAWgB,YAFvB;AAGI,QAAA,KAAK,EAAE;AAAEkB,UAAAA,SAAS,EAAE;AAAE6C,YAAAA,QAAQ,EAAE,UAAZ;AAAwBD,YAAAA,MAAM,EAAE,CAAhC;AAAmCE,YAAAA,IAAI,EAAE,CAAzC;AAA4CC,YAAAA,KAAK,EAAE;AAAnD;AAAb,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,gBAAD,CAAkB,MAAlB;AACI,QAAA,GAAG,EAAC,OADR;AAEI,QAAA,IAAI,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFV;AAGI,QAAA,KAAK,EAAC,OAHV;AAII,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC5E,QAAL,CAAc;AAAE6C,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAN;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAWI,oBAAC,gBAAD,CAAkB,MAAlB;AACI,QAAA,GAAG,EAAC,SADR;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC7C,QAAL,CAAc;AAAE6C,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAN;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAiBI,oBAAC,gBAAD,CAAkB,MAAlB;AACI,QAAA,GAAG,EAAC,iBADR;AAEI,QAAA,IAAI,EAAC,iBAFT;AAGI,QAAA,KAAK,EAAC,UAHV;AAII,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC7C,QAAL,CAAc;AAAE6C,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAN;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBJ,EAuBI,oBAAC,gBAAD,CAAkB,MAAlB;AACI,QAAA,GAAG,EAAC,UADR;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAC,UAHV;AAII,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC7C,QAAL,CAAc;AAAE6C,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAN;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBJ,CAxCJ,CADJ;AA2EH;;;;EA7QcjF,S;;AAgRnBwB,IAAI,CAACP,SAAL,GAAiBA,SAAjB;AAEA,eAAeO,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { ToastAndroid, ScrollView, Platform, Animated, Easing } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport 'localstorage-polyfill';\r\nimport {Actions, ActionConst} from 'react-native-router-flux';\r\n\r\nimport routes from '../routes';\r\n\r\nimport Container from '../Container';\r\nimport List from \"../List/index\";\r\n// components\r\nimport {\r\n    ActionButton,\r\n    Avatar,\r\n    ListItem,\r\n    Toolbar,\r\n    BottomNavigation,\r\n    Icon,\r\n} from 'react-native-material-ui/src';\r\nimport { createIconSetFromFontello } from 'react-native-vector-icons';\r\n\r\nconst UP = 1;\r\nconst DOWN = -1;\r\n\r\nconst propTypes = {\r\n    navigation: PropTypes.shape({\r\n        goBack: PropTypes.func.isRequired,\r\n        navigate: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.offset = 0;\r\n        this.scrollDirection = 0;\r\n\r\n        this.state = {\r\n            selected: [],\r\n            searchText: '',\r\n            active: 'people',\r\n            moveAnimated: new Animated.Value(0),\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('eeeeeeeeeeeeeeeeee');\r\n        console.log(localStorage.getItem(\"key\"));\r\n        \r\n\r\n        if(!localStorage.getItem(\"key\")){\r\n            Actions.LoginScreen();\r\n        }\r\n\r\n        \r\n        var url = 'http://192.168.43.133:3000/users/me';\r\n        var token = localStorage.getItem(\"key\");\r\n        console.log('nnn');\r\n        console.log(token);\r\n        console.log('mmm')\r\n\r\n\r\n        fetch(url,{\r\n            method: \"GET\",\r\n            headers: {\r\n                // \"Accept\": \"application/json\",\r\n                // \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+token,\r\n                \r\n            },\r\n            })\r\n            .then(function(response) {\r\n            \r\n            console.log(\"ttttttttttttttttttt\")\r\n            console.log(response.status);\r\n            if(response.status == 409){\r\n                Alert.alert(\r\n                \"Registration Failed!\",\r\n                \"Email is already used\",\r\n                [\r\n                    { text: \"OK\",onPress: _onAlert()  }\r\n                ]\r\n                )\r\n            } \r\n            else if(response.status == 401){\r\n\r\n            }\r\n            else if(response.status == 403){\r\n\r\n            }\r\n            else{\r\n                return response;\r\n            }\r\n\r\n            // if (response.ok) {\r\n            //   console.log(\"ok\",response.ok,\"ok\")\r\n            //   return response;\r\n            // }\r\n            \r\n            // throw Error(response.statusText);\r\n            }).then(function(response) {\r\n            return response.json();\r\n            }).then(function(json) {\r\n            console.log('Request succeeded with JSON response:', json);\r\n            }).catch(function(error) {\r\n            console.log('Request failed:', error);\r\n            });\r\n\r\n    }\r\n\r\n    \r\n\r\n    onAvatarPressed = (value) => {\r\n        console.log('Avatar');\r\n        console.log('Avatarqqqqqqqqqq');\r\n        const { selected } = this.state;\r\n        console.log(selected);\r\n        const index = selected.indexOf(value);\r\n\r\n        if (index >= 0) {\r\n            // remove item\r\n            selected.splice(index, 1);\r\n        } else {\r\n            // add item\r\n            selected.push(value);\r\n        }\r\n\r\n        this.setState({ selected });\r\n    }\r\n    onScroll = (ev) => {\r\n        const currentOffset = ev.nativeEvent.contentOffset.y;\r\n\r\n        const sub = this.offset - currentOffset;\r\n\r\n        // don't care about very small moves\r\n        if (sub > -2 && sub < 2) {\r\n            return;\r\n        }\r\n\r\n        this.offset = ev.nativeEvent.contentOffset.y;\r\n\r\n        const currentDirection = sub > 0 ? UP : DOWN;\r\n\r\n        if (this.scrollDirection !== currentDirection) {\r\n            this.scrollDirection = currentDirection;\r\n\r\n            this.setState({\r\n                bottomHidden: currentDirection === DOWN,\r\n            });\r\n        }\r\n    }\r\n    show = () => {\r\n        Animated.timing(this.state.moveAnimated, {\r\n            toValue: 0,\r\n            duration: 225,\r\n            easing: Easing.bezier(0.0, 0.0, 0.2, 1),\r\n            useNativeDriver: Platform.OS === 'android',\r\n        }).start();\r\n    }\r\n    hide = () => {\r\n        Animated.timing(this.state.moveAnimated, {\r\n            toValue: 56, // because the bottom navigation bar has height set to 56\r\n            duration: 195,\r\n            easing: Easing.bezier(0.4, 0.0, 0.6, 1),\r\n            useNativeDriver: Platform.OS === 'android',\r\n        }).start();\r\n    }\r\n    renderToolbar = () => {\r\n        if (this.state.selected.length > 0) {\r\n            return (\r\n                <Toolbar\r\n                    key=\"toolbar\"\r\n                    leftElement=\"clear\"\r\n                    onLeftElementPress={() => this.setState({ selected: [] })}\r\n                    centerElement={this.state.selected.length.toString()}\r\n                    rightElement={['delete']}\r\n                    style={{\r\n                        container: { backgroundColor: 'white' },\r\n                        titleText: { color: 'rgba(0,0,0,.87)' },\r\n                        leftElement: { color: 'rgba(0,0,0,.54)' },\r\n                        rightElement: { color: 'rgba(0,0,0,.54)' },\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <Toolbar\r\n                key=\"toolbar\"\r\n                leftElement=\"menu\"\r\n                onLeftElementPress={() => this.props.navigation.FrontScreen()}\r\n                centerElement=\"Home\"\r\n                searchable={{\r\n                    autoFocus: true,\r\n                    placeholder: 'Search',\r\n                    onChangeText: value => this.setState({ searchText: value }),\r\n                    onSearchClosed: () => this.setState({ searchText: '' }),\r\n                }}\r\n            />\r\n        );\r\n    }\r\n    renderItem = (title, route) => {\r\n        const searchText = this.state.searchText.toLowerCase();\r\n\r\n        if (searchText.length > 0 && title.toLowerCase().indexOf(searchText) < 0) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ListItem\r\n                divider\r\n                leftElement={<Avatar text={title[0]} />}\r\n                onLeftElementPress={() => this.onAvatarPressed(title)}\r\n                centerElement={title}\r\n                onPress={() => this.props.navigation.navigate(route)}\r\n            />\r\n\r\n        );\r\n    }\r\n    render() {\r\n\r\n        const run =() =>{\r\n            console.log(\"run\")\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                {this.renderToolbar()}\r\n                <ScrollView\r\n                    keyboardShouldPersistTaps=\"always\"\r\n                    keyboardDismissMode=\"interactive\"\r\n                    onScroll={this.onScroll}\r\n                    onPress={run()}\r\n                >\r\n                    {this.renderItem('Action button', 'actionButton') }\r\n                    {this.renderItem('Avatars', 'avatar')}\r\n                    {this.renderItem('Badge', 'badge')}\r\n                    {this.renderItem('Bottom navigation', 'bottomNavigation')}\r\n                    {this.renderItem('Buttons', 'button')}\r\n                    {this.renderItem('Cards', 'card')}\r\n                    {this.renderItem('Checkbox', 'checkbox')}\r\n                    {this.renderItem('Dialog', 'dialog')}\r\n                    {this.renderItem('Drawer', 'drawer')}\r\n                    {this.renderItem('Icon toggles', 'iconToggle')}\r\n                    {this.renderItem('List items', 'list')}\r\n                    \r\n                </ScrollView>\r\n                <ActionButton\r\n                    actions={[\r\n                        { icon: 'email', label: 'Email' },\r\n                        { icon: 'phone', label: 'Phone' },\r\n                        { icon: 'sms', label: 'Text' },\r\n                        { icon: 'favorite', label: 'Favorite' },\r\n                    ]}\r\n                    hidden={this.state.bottomHidden}\r\n                    icon=\"share\"\r\n                    transition=\"speedDial\"\r\n                    onPress={(action) => {\r\n                        if (Platform.OS === 'android') {\r\n                            ToastAndroid.show(action, ToastAndroid.SHORT);\r\n                        }\r\n                    }}\r\n                    style={{\r\n                        positionContainer: { bottom: 76 },\r\n                    }}\r\n                />\r\n                <BottomNavigation\r\n                    active={this.state.active}\r\n                    hidden={this.state.bottomHidden}\r\n                    style={{ container: { position: 'absolute', bottom: 0, left: 0, right: 0 } }}\r\n                >\r\n                    <BottomNavigation.Action\r\n                        key=\"today\"\r\n                        icon={<Icon name=\"today\" />}\r\n                        label=\"Today\"\r\n                        onPress={() => this.setState({ active: 'today' })}\r\n                    />\r\n                    <BottomNavigation.Action\r\n                        key=\"profile\"\r\n                        icon=\"profile\"\r\n                        label=\"Profile\"\r\n                        onPress={() => this.setState({ active: 'profile' })}\r\n                    />\r\n                    <BottomNavigation.Action\r\n                        key=\"bookmark-border\"\r\n                        icon=\"bookmark-border\"\r\n                        label=\"Bookmark\"\r\n                        onPress={() => this.setState({ active: 'bookmark-border' })}\r\n                    />\r\n                    <BottomNavigation.Action\r\n                        key=\"settings\"\r\n                        icon=\"settings\"\r\n                        label=\"Settings\"\r\n                        onPress={() => this.setState({ active: 'settings' })}\r\n                    />\r\n                </BottomNavigation>\r\n            </Container>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = propTypes;\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}