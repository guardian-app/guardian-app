{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\group project 2\\\\projectApp\\\\guardian-mobile\\\\node_modules\\\\react-native-material-ui\\\\src\\\\Dialog\\\\Dialog.react.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport RippleFeedback from \"../RippleFeedback\";\nimport { ViewPropTypes } from \"../utils\";\nimport withTheme from \"../styles/withTheme\";\nimport Title from \"./Title.react\";\nimport Content from \"./Content.react\";\nimport Actions from \"./Actions.react\";\nvar propTypes = {\n  onPress: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  style: PropTypes.shape({\n    container: ViewPropTypes.style\n  })\n};\nvar defaultProps = {\n  onPress: null,\n  style: {}\n};\n\nfunction getStyles(props) {\n  var dialog = props.theme.dialog;\n  return {\n    container: [dialog.container, props.style.container]\n  };\n}\n\nvar Dialog = function (_PureComponent) {\n  _inherits(Dialog, _PureComponent);\n\n  var _super = _createSuper(Dialog);\n\n  function Dialog() {\n    var _this;\n\n    _classCallCheck(this, Dialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderContent = function () {\n      var children = _this.props.children;\n      var styles = getStyles(_this.props);\n      return React.createElement(View, {\n        style: styles.container,\n        pointerEvents: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, children);\n    };\n\n    return _this;\n  }\n\n  _createClass(Dialog, [{\n    key: \"render\",\n    value: function render() {\n      var onPress = this.props.onPress;\n\n      if (onPress) {\n        return React.createElement(RippleFeedback, {\n          onPress: onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }\n        }, this.renderContent());\n      }\n\n      return this.renderContent();\n    }\n  }]);\n\n  return Dialog;\n}(PureComponent);\n\nDialog.propTypes = propTypes;\nDialog.defaultProps = defaultProps;\nDialog.Title = Title;\nDialog.Content = Content;\nDialog.Actions = Actions;\nexport default withTheme(Dialog);","map":{"version":3,"sources":["D:/PROJECTS/group project 2/projectApp/guardian-mobile/node_modules/react-native-material-ui/src/Dialog/Dialog.react.js"],"names":["React","PureComponent","PropTypes","RippleFeedback","ViewPropTypes","withTheme","Title","Content","Actions","propTypes","onPress","func","children","node","isRequired","style","shape","container","defaultProps","getStyles","props","dialog","theme","Dialog","renderContent","styles"],"mappings":";;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,cAAP;AACA,SAASC,aAAT;AACA,OAAOC,SAAP;AAEA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAER,SAAS,CAACS,IADH;AAEhBC,EAAAA,QAAQ,EAAEV,SAAS,CAACW,IAAV,CAAeC,UAFT;AAGhBC,EAAAA,KAAK,EAAEb,SAAS,CAACc,KAAV,CAAgB;AACrBC,IAAAA,SAAS,EAAEb,aAAa,CAACW;AADJ,GAAhB;AAHS,CAAlB;AAOA,IAAMG,YAAY,GAAG;AACnBR,EAAAA,OAAO,EAAE,IADU;AAEnBK,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,SAASI,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,MAChBC,MADgB,GACLD,KAAK,CAACE,KADD,CAChBD,MADgB;AAGxB,SAAO;AACLJ,IAAAA,SAAS,EAAE,CAACI,MAAM,CAACJ,SAAR,EAAmBG,KAAK,CAACL,KAAN,CAAYE,SAA/B;AADN,GAAP;AAGD;;IAEKM,M;;;;;;;;;;;;;;;;UACJC,a,GAAgB,YAAM;AAAA,UACZZ,QADY,GACC,MAAKQ,KADN,CACZR,QADY;AAEpB,UAAMa,MAAM,GAAGN,SAAS,CAAC,MAAKC,KAAN,CAAxB;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACR,SAApB;AAA+B,QAAA,aAAa,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,QADH,CADF;AAKD,K;;;;;;;6BAEQ;AAAA,UACCF,OADD,GACa,KAAKU,KADlB,CACCV,OADD;;AAGP,UAAIA,OAAJ,EAAa;AACX,eACE,oBAAC,cAAD;AAAgB,UAAA,OAAO,EAAEA,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKc,aAAL,EADH,CADF;AAKD;;AAED,aAAO,KAAKA,aAAL,EAAP;AACD;;;;EAxBkBvB,a;;AA2BrBsB,MAAM,CAACd,SAAP,GAAmBA,SAAnB;AACAc,MAAM,CAACL,YAAP,GAAsBA,YAAtB;AAEAK,MAAM,CAACjB,KAAP,GAAeA,KAAf;AACAiB,MAAM,CAAChB,OAAP,GAAiBA,OAAjB;AACAgB,MAAM,CAACf,OAAP,GAAiBA,OAAjB;AAEA,eAAeH,SAAS,CAACkB,MAAD,CAAxB","sourcesContent":["/* eslint-disable import/no-unresolved, import/extensions */\nimport { View } from 'react-native';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n/* eslint-enable import/no-unresolved, import/extensions */\nimport RippleFeedback from '../RippleFeedback';\nimport { ViewPropTypes } from '../utils';\nimport withTheme from '../styles/withTheme';\n\nimport Title from './Title.react';\nimport Content from './Content.react';\nimport Actions from './Actions.react';\n\nconst propTypes = {\n  onPress: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  style: PropTypes.shape({\n    container: ViewPropTypes.style,\n  }),\n};\nconst defaultProps = {\n  onPress: null,\n  style: {},\n};\n\nfunction getStyles(props) {\n  const { dialog } = props.theme;\n\n  return {\n    container: [dialog.container, props.style.container],\n  };\n}\n\nclass Dialog extends PureComponent {\n  renderContent = () => {\n    const { children } = this.props;\n    const styles = getStyles(this.props);\n\n    return (\n      <View style={styles.container} pointerEvents=\"auto\">\n        {children}\n      </View>\n    );\n  };\n\n  render() {\n    const { onPress } = this.props;\n\n    if (onPress) {\n      return (\n        <RippleFeedback onPress={onPress}>\n          {this.renderContent()}\n        </RippleFeedback>\n      );\n    }\n\n    return this.renderContent();\n  }\n}\n\nDialog.propTypes = propTypes;\nDialog.defaultProps = defaultProps;\n\nDialog.Title = Title;\nDialog.Content = Content;\nDialog.Actions = Actions;\n\nexport default withTheme(Dialog);\n"]},"metadata":{},"sourceType":"module"}